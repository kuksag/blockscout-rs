// Compile using:
// $ protoc desc/description.proto -I=desc/ -I=googleapis/  --openapi_out=.
// while at blockscout-rs/verification/src/proto

syntax = "proto3";

option go_package = "./";

package verification_service;

import "google/protobuf/empty.proto";
//import "googleapis/google/api/annotations.proto";
import "google/api/annotations.proto";

// ApiRequest description.
message ApiRequest {
  // ApiRequest: address field.
  string address = 1;
  // ApiRequest: chain field.
  string chain = 2;
  // ApiRequest: files field.
  map<string, string> files = 3;
  // ApiRequest: chosen contract field.
  uint64 chosen_contract = 4;
}

// VerificationResponse description.
message VerificationResult {
  // VerificationResult: file_name field.
  string file_name = 1;
  string contract_name = 2;
  string compiler_version = 3;
  string evm_version = 4;
  bytes constructor_arguments = 5;
  bool optimization = 6;
  uint64 optimization_runs = 7;
  map<string, string> contract_libraries = 8;
  string abi = 9;
  // VerificationResult: sources field.
  map<string, string> sources = 10;
}

message VerificationResponse {
  string message = 1;
  VerificationResult result = 2;
  enum verification_status {
    SUCCESS = 0;
    FAILURE = 1;
  }
}
 
service VerificationService {
  rpc health (google.protobuf.Empty) returns (google.protobuf.Empty);

  rpc Status(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get: "/v1/example/status"
    };
  }

  // Verify description.
  rpc Verify(ApiRequest) returns (VerificationResponse) {
    option (google.api.http) = {
      post: "/v1/example/verify"
      body: "*"
    };
  }

}
